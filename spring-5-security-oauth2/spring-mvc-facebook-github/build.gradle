apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-security',
      'org.springframework.security:spring-security-oauth2-client',
      'org.springframework.security:spring-security-oauth2-jose'

  compile 'org.springframework.boot:spring-boot-starter-web',
      'org.springframework.boot:spring-boot-starter-webflux',
      'org.springframework.boot:spring-boot-starter-thymeleaf'

  compile 'org.springframework.boot:spring-boot-starter-actuator'

  runtime 'org.springframework.boot:spring-boot-devtools'
  compileOnly 'org.projectlombok:lombok'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.springframework.security:spring-security-test'
}

bootJar {
  launchScript()
}

apply plugin: 'com.avast.gradle.docker-compose'

def profile = project.hasProperty('profile') ? project.getProperty('profile') : 'gradle'

dockerCompose {
  useComposeFiles = [project.file("docker-compose-${profile}.yaml")]
  // captureContainersOutput = true
  captureContainersOutput = false
  stopContainers = true
  removeContainers = true
  removeImages = 'Local'
  removeVolumes = true
  removeOrphans = true
  forceRecreate = true
  waitForTcpPorts = false
  projectName = project.name
}

composeUp.dependsOn assemble
