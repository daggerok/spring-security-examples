# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Postgres JSON using Spring R2DBC
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  spring-security-oauth2-jwt-step-0:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache-mvn
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/cache@v2
      id: cache-gradle
      with:
        path: |
          ~/.gradle
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/cache@v1
      id: cache-n
      with:
        path: ~/.n*
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/setup-node@v2
    - run: ./mvnw -f spring-security-oauth2-jwt/step-0 -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -f spring-security-oauth2-jwt/step-0
    - run: java -jar spring-security-oauth2-jwt/step-0/target/*.jar -Dspring.profiles.active=gh &
    - run: npx wait-port 8080
    - run: sudo apt-get install -y curl httpie
    - run: http :8080
    - run: http :8080/api/greeting
  spring-security-oauth2-jwt-step-1-basic:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache-mvn
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/setup-node@v2
    - run: ./mvnw -f spring-security-oauth2-jwt/step-1-basic -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -f spring-security-oauth2-jwt/step-1-basic
    - run: java -jar spring-security-oauth2-jwt/step-1-basic/target/*.jar -Dspring.profiles.active=gh &
    - run: npx wait-port 8080
    - run: sudo apt-get install -y curl httpie
    - run: http -a admin:admin   :8080
    - run: http -a user:password :8080/api/greeting
  spring-security-oauth2-jwt-step-2-fb-gh:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache-mvn
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/setup-node@v2
    - run: cp -Rf  ./spring-security-oauth2-jwt/step-2-fb-gh/src/main/resources/disabled.application-gh.yaml ./spring-security-oauth2-jwt/step-2-fb-gh/src/main/resources/application-gh.yaml
    - run: ./mvnw -f spring-security-oauth2-jwt/step-2-fb-gh -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -f spring-security-oauth2-jwt/step-2-fb-gh
    - run: java -jar spring-security-oauth2-jwt/step-2-fb-gh/target/*.jar -Dspring.profiles.active=gh &
    - run: npx wait-port 8080
    - run: sudo apt-get install -y curl httpie
    - run: http :8080
    - run: http :8080/login
  github-pages:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache-mvn
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/cache@v2
      id: cache-gradle
      with:
        path: |
          ~/.gradle
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: ./gradlew --stop
    - run: ./mvnw -B dependency:resolve-plugins dependency:resolve
    - run: ./mvnw -Pdocs
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: target/generated-docs # The folder the action should deploy.
